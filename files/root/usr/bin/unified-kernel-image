#!/bin/bash

set -euo pipefail  # x for debug

if [ ! -d /efi ]; then
    echo "Not an EFI system"
    exit 1
fi

[ -d /efi/EFI/Linux ] || mkdir -p /efi/EFI/Linux

rm -f /efi/EFI/Linux/linux-*.efi

for kernel in /boot/vmlinuz-*; do
    KERNEL_NAME=$(echo "$kernel" | sed 's#/boot/vmlinuz-##')

    echo "==> Generating unified image for '$KERNEL_NAME'"

    cat /boot/*-ucode.img /boot/initramfs-$KERNEL_NAME.img > "/tmp/unified-$KERNEL_NAME.img"

    [ -d /efi/EFI/Linux ] || mkdir -p /efi/EFI/Linux

    #--add-section .splash="/usr/share/systemd/bootctl/splash-arch.bmp" --change-section-vma .splash=0x40000 \
    objcopy \
        --add-section .osrel="/usr/lib/os-release" --change-section-vma .osrel=0x20000 \
        --add-section .cmdline="/boot/cmdline.txt" --change-section-vma .cmdline=0x30000 \
        --add-section .linux="/boot/vmlinuz-$KERNEL_NAME" --change-section-vma .linux=0x2000000 \
        --add-section .initrd="/tmp/unified-$KERNEL_NAME.img" --change-section-vma .initrd=0x3000000 \
        "/usr/lib/systemd/boot/efi/linuxx64.efi.stub" \
        "/efi/EFI/Linux/$KERNEL_NAME.efi"

    rm -f "/tmp/unified-$KERNEL_NAME.img"
done
